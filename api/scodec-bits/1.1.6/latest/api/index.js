Index.PACKAGES = {"scodec" : [], "scodec.bits" : [{"name" : "scodec.bits.Bases", "shortDescription" : "Provides types related to base conversion -- e.g., binary, hexadecimal, and base 64.", "object" : "scodec\/bits\/Bases$.html", "members_object" : [{"label" : "Alphabets", "tail" : "", "member" : "scodec.bits.Bases.Alphabets", "link" : "scodec\/bits\/Bases$.html#Alphabets", "kind" : "object"}, {"label" : "Base64Alphabet", "tail" : "", "member" : "scodec.bits.Bases.Base64Alphabet", "link" : "scodec\/bits\/Bases$.html#Base64AlphabetextendsBases.PaddedAlphabet", "kind" : "trait"}, {"label" : "HexAlphabet", "tail" : "", "member" : "scodec.bits.Bases.HexAlphabet", "link" : "scodec\/bits\/Bases$.html#HexAlphabetextendsBases.Alphabet", "kind" : "trait"}, {"label" : "BinaryAlphabet", "tail" : "", "member" : "scodec.bits.Bases.BinaryAlphabet", "link" : "scodec\/bits\/Bases$.html#BinaryAlphabetextendsBases.Alphabet", "kind" : "trait"}, {"label" : "PaddedAlphabet", "tail" : "", "member" : "scodec.bits.Bases.PaddedAlphabet", "link" : "scodec\/bits\/Bases$.html#PaddedAlphabetextendsBases.Alphabet", "kind" : "trait"}, {"label" : "Alphabet", "tail" : "", "member" : "scodec.bits.Bases.Alphabet", "link" : "scodec\/bits\/Bases$.html#AlphabetextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/Bases$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/Bases$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/Bases$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/Bases$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/Bases$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/Bases$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/Bases$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/Bases$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/Bases$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/Bases$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/Bases$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/Bases$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/Bases$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/Bases$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/Bases$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/Bases$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/Bases$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/Bases$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/Bases$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scodec.bits.BinStringSyntax", "shortDescription" : "Provides the bin string interpolator, which returns BitVector instances from binary strings.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scodec\/bits\/package$$BinStringSyntax.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scodec\/bits\/package$$BinStringSyntax.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinStringSyntax) ⇒ Boolean, msg: ⇒ Any): BinStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$BinStringSyntax.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BinStringSyntax) ⇒ Boolean): BinStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$BinStringSyntax.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BinStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$BinStringSyntax.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BinStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$BinStringSyntax.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BinStringSyntax, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scodec\/bits\/package$$BinStringSyntax.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BinStringSyntax, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scodec\/bits\/package$$BinStringSyntax.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "bin", "tail" : "(args: BitVector*): BitVector", "member" : "scodec.bits.BinStringSyntax.bin", "link" : "scodec\/bits\/package$$BinStringSyntax.html#bin(args:scodec.bits.BitVector*):scodec.bits.BitVector", "kind" : "macro def"}, {"member" : "scodec.bits.BinStringSyntax#<init>", "error" : "unsupported entity"}, {"label" : "sc", "tail" : ": StringContext", "member" : "scodec.bits.BinStringSyntax.sc", "link" : "scodec\/bits\/package$$BinStringSyntax.html#sc:StringContext", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "scodec\/bits\/package$$BinStringSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "scodec\/bits\/package$$BinStringSyntax.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/package$$BinStringSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/package$$BinStringSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "scodec\/bits\/package$$BinStringSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "scodec\/bits\/package$$BinStringSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "scodec\/bits\/package$$BinStringSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "scodec\/bits\/package$$BinStringSyntax.html", "kind" : "class"}, {"name" : "scodec.bits.BitVector", "shortDescription" : "Persistent vector of bits, stored as bytes.", "object" : "scodec\/bits\/BitVector$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scodec\/bits\/BitVector.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scodec\/bits\/BitVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BitVector) ⇒ Boolean, msg: ⇒ Any): BitVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BitVector) ⇒ Boolean): BitVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BitVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BitVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BitVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scodec\/bits\/BitVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BitVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scodec\/bits\/BitVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scodec.bits.BitVector.writeReplace", "link" : "scodec\/bits\/BitVector.html#writeReplace():AnyRef", "kind" : "final def"}, {"label" : "mapBytes", "tail" : "(f: (ByteVector) ⇒ ByteVector): BitVector", "member" : "scodec.bits.BitVector.mapBytes", "link" : "scodec\/bits\/BitVector.html#mapBytes(f:scodec.bits.ByteVector=>scodec.bits.ByteVector):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "outOfBounds", "tail" : "(n: Long): Nothing", "member" : "scodec.bits.BitVector.outOfBounds", "link" : "scodec\/bits\/BitVector.html#outOfBounds(n:Long):Nothing", "kind" : "final def"}, {"label" : "checkBounds", "tail" : "(n: Long): Unit", "member" : "scodec.bits.BitVector.checkBounds", "link" : "scodec\/bits\/BitVector.html#checkBounds(n:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scodec.bits.BitVector.toString", "link" : "scodec\/bits\/BitVector.html#toString():String", "kind" : "final def"}, {"label" : "hashCode", "tail" : ": Int", "member" : "scodec.bits.BitVector.hashCode", "link" : "scodec\/bits\/BitVector.html#hashCode:Int", "kind" : "final lazy val"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scodec.bits.BitVector.equals", "link" : "scodec\/bits\/BitVector.html#equals(other:Any):Boolean", "kind" : "final def"}, {"label" : "===", "tail" : "(other: BitVector): Boolean", "member" : "scodec.bits.BitVector.===", "link" : "scodec\/bits\/BitVector.html#===(other:scodec.bits.BitVector):Boolean", "kind" : "final def"}, {"label" : "decrypt", "tail" : "(ci: Cipher, key: Key, aparams: Option[AlgorithmParameters])(sr: SecureRandom): Either[GeneralSecurityException, BitVector]", "member" : "scodec.bits.BitVector.decrypt", "link" : "scodec\/bits\/BitVector.html#decrypt(ci:javax.crypto.Cipher,key:java.security.Key,aparams:Option[java.security.AlgorithmParameters])(implicitsr:java.security.SecureRandom):Either[java.security.GeneralSecurityException,scodec.bits.BitVector]", "kind" : "final def"}, {"label" : "encrypt", "tail" : "(ci: Cipher, key: Key, aparams: Option[AlgorithmParameters])(sr: SecureRandom): Either[GeneralSecurityException, BitVector]", "member" : "scodec.bits.BitVector.encrypt", "link" : "scodec\/bits\/BitVector.html#encrypt(ci:javax.crypto.Cipher,key:java.security.Key,aparams:Option[java.security.AlgorithmParameters])(implicitsr:java.security.SecureRandom):Either[java.security.GeneralSecurityException,scodec.bits.BitVector]", "kind" : "final def"}, {"label" : "digest", "tail" : "(digest: MessageDigest): BitVector", "member" : "scodec.bits.BitVector.digest", "link" : "scodec\/bits\/BitVector.html#digest(digest:java.security.MessageDigest):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "digest", "tail" : "(algorithm: String): BitVector", "member" : "scodec.bits.BitVector.digest", "link" : "scodec\/bits\/BitVector.html#digest(algorithm:String):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "inflate", "tail" : "(chunkSize: Int): Either[DataFormatException, BitVector]", "member" : "scodec.bits.BitVector.inflate", "link" : "scodec\/bits\/BitVector.html#inflate(chunkSize:Int):Either[java.util.zip.DataFormatException,scodec.bits.BitVector]", "kind" : "final def"}, {"label" : "deflate", "tail" : "(level: Int, strategy: Int, nowrap: Boolean, chunkSize: Int): BitVector", "member" : "scodec.bits.BitVector.deflate", "link" : "scodec\/bits\/BitVector.html#deflate(level:Int,strategy:Int,nowrap:Boolean,chunkSize:Int):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "decodeAscii", "tail" : "(): Either[CharacterCodingException, String]", "member" : "scodec.bits.BitVector.decodeAscii", "link" : "scodec\/bits\/BitVector.html#decodeAscii:Either[java.nio.charset.CharacterCodingException,String]", "kind" : "final def"}, {"label" : "decodeUtf8", "tail" : "(): Either[CharacterCodingException, String]", "member" : "scodec.bits.BitVector.decodeUtf8", "link" : "scodec\/bits\/BitVector.html#decodeUtf8:Either[java.nio.charset.CharacterCodingException,String]", "kind" : "final def"}, {"label" : "decodeString", "tail" : "(charset: Charset): Either[CharacterCodingException, String]", "member" : "scodec.bits.BitVector.decodeString", "link" : "scodec\/bits\/BitVector.html#decodeString(implicitcharset:java.nio.charset.Charset):Either[java.nio.charset.CharacterCodingException,String]", "kind" : "final def"}, {"label" : "toUUID", "tail" : "(): UUID", "member" : "scodec.bits.BitVector.toUUID", "link" : "scodec\/bits\/BitVector.html#toUUID:java.util.UUID", "kind" : "final def"}, {"label" : "toLong", "tail" : "(signed: Boolean, ordering: ByteOrdering): Long", "member" : "scodec.bits.BitVector.toLong", "link" : "scodec\/bits\/BitVector.html#toLong(signed:Boolean,ordering:scodec.bits.ByteOrdering):Long", "kind" : "final def"}, {"label" : "sliceToLong", "tail" : "(start: Long, bits: Int, signed: Boolean, ordering: ByteOrdering): Long", "member" : "scodec.bits.BitVector.sliceToLong", "link" : "scodec\/bits\/BitVector.html#sliceToLong(start:Long,bits:Int,signed:Boolean,ordering:scodec.bits.ByteOrdering):Long", "kind" : "final def"}, {"label" : "toInt", "tail" : "(signed: Boolean, ordering: ByteOrdering): Int", "member" : "scodec.bits.BitVector.toInt", "link" : "scodec\/bits\/BitVector.html#toInt(signed:Boolean,ordering:scodec.bits.ByteOrdering):Int", "kind" : "final def"}, {"label" : "sliceToInt", "tail" : "(start: Long, bits: Int, signed: Boolean, ordering: ByteOrdering): Int", "member" : "scodec.bits.BitVector.sliceToInt", "link" : "scodec\/bits\/BitVector.html#sliceToInt(start:Long,bits:Int,signed:Boolean,ordering:scodec.bits.ByteOrdering):Int", "kind" : "final def"}, {"label" : "toShort", "tail" : "(signed: Boolean, ordering: ByteOrdering): Short", "member" : "scodec.bits.BitVector.toShort", "link" : "scodec\/bits\/BitVector.html#toShort(signed:Boolean,ordering:scodec.bits.ByteOrdering):Short", "kind" : "final def"}, {"label" : "sliceToShort", "tail" : "(start: Long, bits: Int, signed: Boolean, ordering: ByteOrdering): Short", "member" : "scodec.bits.BitVector.sliceToShort", "link" : "scodec\/bits\/BitVector.html#sliceToShort(start:Long,bits:Int,signed:Boolean,ordering:scodec.bits.ByteOrdering):Short", "kind" : "final def"}, {"label" : "toByte", "tail" : "(signed: Boolean): Byte", "member" : "scodec.bits.BitVector.toByte", "link" : "scodec\/bits\/BitVector.html#toByte(signed:Boolean):Byte", "kind" : "final def"}, {"label" : "sliceToByte", "tail" : "(start: Long, bits: Int, signed: Boolean): Byte", "member" : "scodec.bits.BitVector.sliceToByte", "link" : "scodec\/bits\/BitVector.html#sliceToByte(start:Long,bits:Int,signed:Boolean):Byte", "kind" : "final def"}, {"label" : "toBase64", "tail" : "(alphabet: Base64Alphabet): String", "member" : "scodec.bits.BitVector.toBase64", "link" : "scodec\/bits\/BitVector.html#toBase64(alphabet:scodec.bits.Bases.Base64Alphabet):String", "kind" : "final def"}, {"label" : "toBase64", "tail" : "(): String", "member" : "scodec.bits.BitVector.toBase64", "link" : "scodec\/bits\/BitVector.html#toBase64:String", "kind" : "final def"}, {"label" : "toHex", "tail" : "(alphabet: HexAlphabet): String", "member" : "scodec.bits.BitVector.toHex", "link" : "scodec\/bits\/BitVector.html#toHex(alphabet:scodec.bits.Bases.HexAlphabet):String", "kind" : "final def"}, {"label" : "toHex", "tail" : "(): String", "member" : "scodec.bits.BitVector.toHex", "link" : "scodec\/bits\/BitVector.html#toHex:String", "kind" : "final def"}, {"label" : "toBin", "tail" : "(alphabet: BinaryAlphabet): String", "member" : "scodec.bits.BitVector.toBin", "link" : "scodec\/bits\/BitVector.html#toBin(alphabet:scodec.bits.Bases.BinaryAlphabet):String", "kind" : "final def"}, {"label" : "toBin", "tail" : "(): String", "member" : "scodec.bits.BitVector.toBin", "link" : "scodec\/bits\/BitVector.html#toBin:String", "kind" : "final def"}, {"label" : "toByteBuffer", "tail" : "(): ByteBuffer", "member" : "scodec.bits.BitVector.toByteBuffer", "link" : "scodec\/bits\/BitVector.html#toByteBuffer:java.nio.ByteBuffer", "kind" : "final def"}, {"label" : "toByteArray", "tail" : "(): Array[Byte]", "member" : "scodec.bits.BitVector.toByteArray", "link" : "scodec\/bits\/BitVector.html#toByteArray:Array[Byte]", "kind" : "final def"}, {"label" : "bytes", "tail" : "(): ByteVector", "member" : "scodec.bits.BitVector.bytes", "link" : "scodec\/bits\/BitVector.html#bytes:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "toByteVector", "tail" : "(): ByteVector", "member" : "scodec.bits.BitVector.toByteVector", "link" : "scodec\/bits\/BitVector.html#toByteVector:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Boolean]", "member" : "scodec.bits.BitVector.toIndexedSeq", "link" : "scodec\/bits\/BitVector.html#toIndexedSeq:IndexedSeq[Boolean]", "kind" : "final def"}, {"label" : "force", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.force", "link" : "scodec\/bits\/BitVector.html#force:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "copy", "tail" : "(): Bytes", "member" : "scodec.bits.BitVector.copy", "link" : "scodec\/bits\/BitVector.html#copy:scodec.bits.BitVector.Bytes", "kind" : "final def"}, {"label" : "compact", "tail" : "(): Bytes", "member" : "scodec.bits.BitVector.compact", "link" : "scodec\/bits\/BitVector.html#compact:scodec.bits.BitVector.Bytes", "kind" : "final def"}, {"label" : "rotateRight", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.rotateRight", "link" : "scodec\/bits\/BitVector.html#rotateRight(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "rotateLeft", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.rotateLeft", "link" : "scodec\/bits\/BitVector.html#rotateLeft(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(n: Long, signExtension: Boolean): BitVector", "member" : "scodec.bits.BitVector.shiftRight", "link" : "scodec\/bits\/BitVector.html#shiftRight(n:Long,signExtension:Boolean):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.shiftLeft", "link" : "scodec\/bits\/BitVector.html#shiftLeft(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "xor", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitVector.xor", "link" : "scodec\/bits\/BitVector.html#xor(other:scodec.bits.BitVector):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "or", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitVector.or", "link" : "scodec\/bits\/BitVector.html#or(other:scodec.bits.BitVector):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "and", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitVector.and", "link" : "scodec\/bits\/BitVector.html#and(other:scodec.bits.BitVector):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "not", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.not", "link" : "scodec\/bits\/BitVector.html#not:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "populationCount", "tail" : "(): Long", "member" : "scodec.bits.BitVector.populationCount", "link" : "scodec\/bits\/BitVector.html#populationCount:Long", "kind" : "final def"}, {"label" : "reverseBitOrder", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.reverseBitOrder", "link" : "scodec\/bits\/BitVector.html#reverseBitOrder:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "invertReverseByteOrder", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.invertReverseByteOrder", "link" : "scodec\/bits\/BitVector.html#invertReverseByteOrder:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "reverseByteOrder", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.reverseByteOrder", "link" : "scodec\/bits\/BitVector.html#reverseByteOrder:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "reverse", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.reverse", "link" : "scodec\/bits\/BitVector.html#reverse:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "padLeft", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.padLeft", "link" : "scodec\/bits\/BitVector.html#padLeft(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "padRight", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.padRight", "link" : "scodec\/bits\/BitVector.html#padRight(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "padTo", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.padTo", "link" : "scodec\/bits\/BitVector.html#padTo(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Boolean]", "member" : "scodec.bits.BitVector.lastOption", "link" : "scodec\/bits\/BitVector.html#lastOption:Option[Boolean]", "kind" : "final def"}, {"label" : "last", "tail" : "(): Boolean", "member" : "scodec.bits.BitVector.last", "link" : "scodec\/bits\/BitVector.html#last:Boolean", "kind" : "final def"}, {"label" : "init", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.init", "link" : "scodec\/bits\/BitVector.html#init:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "tail", "tail" : "(): BitVector", "member" : "scodec.bits.BitVector.tail", "link" : "scodec\/bits\/BitVector.html#tail:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[Boolean]", "member" : "scodec.bits.BitVector.headOption", "link" : "scodec\/bits\/BitVector.html#headOption:Option[Boolean]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Boolean", "member" : "scodec.bits.BitVector.head", "link" : "scodec\/bits\/BitVector.html#head:Boolean", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Long): Stream[BitVector]", "member" : "scodec.bits.BitVector.grouped", "link" : "scodec\/bits\/BitVector.html#grouped(n:Long):Stream[scodec.bits.BitVector]", "kind" : "final def"}, {"label" : "containsSlice", "tail" : "(slice: BitVector): Boolean", "member" : "scodec.bits.BitVector.containsSlice", "link" : "scodec\/bits\/BitVector.html#containsSlice(slice:scodec.bits.BitVector):Boolean", "kind" : "final def"}, {"label" : "indexOfSlice", "tail" : "(slice: BitVector, from: Long): Long", "member" : "scodec.bits.BitVector.indexOfSlice", "link" : "scodec\/bits\/BitVector.html#indexOfSlice(slice:scodec.bits.BitVector,from:Long):Long", "kind" : "final def"}, {"label" : "indexOfSlice", "tail" : "(slice: BitVector): Long", "member" : "scodec.bits.BitVector.indexOfSlice", "link" : "scodec\/bits\/BitVector.html#indexOfSlice(slice:scodec.bits.BitVector):Long", "kind" : "final def"}, {"label" : "endsWith", "tail" : "(b: BitVector): Boolean", "member" : "scodec.bits.BitVector.endsWith", "link" : "scodec\/bits\/BitVector.html#endsWith(b:scodec.bits.BitVector):Boolean", "kind" : "final def"}, {"label" : "startsWith", "tail" : "(b: BitVector): Boolean", "member" : "scodec.bits.BitVector.startsWith", "link" : "scodec\/bits\/BitVector.html#startsWith(b:scodec.bits.BitVector):Boolean", "kind" : "final def"}, {"label" : "consumeThen", "tail" : "(n: Long)(err: (String) ⇒ R, f: (BitVector, BitVector) ⇒ R): R", "member" : "scodec.bits.BitVector.consumeThen", "link" : "scodec\/bits\/BitVector.html#consumeThen[R](n:Long)(err:String=>R,f:(scodec.bits.BitVector,scodec.bits.BitVector)=>R):R", "kind" : "final def"}, {"label" : "consume", "tail" : "(n: Long)(decode: (BitVector) ⇒ Either[String, A]): Either[String, (BitVector, A)]", "member" : "scodec.bits.BitVector.consume", "link" : "scodec\/bits\/BitVector.html#consume[A](n:Long)(decode:scodec.bits.BitVector=>Either[String,A]):Either[String,(scodec.bits.BitVector,A)]", "kind" : "final def"}, {"label" : "acquireThen", "tail" : "(n: Long)(err: (String) ⇒ R, f: (BitVector) ⇒ R): R", "member" : "scodec.bits.BitVector.acquireThen", "link" : "scodec\/bits\/BitVector.html#acquireThen[R](n:Long)(err:String=>R,f:scodec.bits.BitVector=>R):R", "kind" : "final def"}, {"label" : "acquire", "tail" : "(n: Long): Either[String, BitVector]", "member" : "scodec.bits.BitVector.acquire", "link" : "scodec\/bits\/BitVector.html#acquire(n:Long):Either[String,scodec.bits.BitVector]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Long, until: Long): BitVector", "member" : "scodec.bits.BitVector.slice", "link" : "scodec\/bits\/BitVector.html#slice(from:Long,until:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "splitAt", "tail" : "(n: Long): (BitVector, BitVector)", "member" : "scodec.bits.BitVector.splitAt", "link" : "scodec\/bits\/BitVector.html#splitAt(n:Long):(scodec.bits.BitVector,scodec.bits.BitVector)", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.takeRight", "link" : "scodec\/bits\/BitVector.html#takeRight(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.dropRight", "link" : "scodec\/bits\/BitVector.html#dropRight(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : ":+", "tail" : "(b: Boolean): BitVector", "member" : "scodec.bits.BitVector.:+", "link" : "scodec\/bits\/BitVector.html#:+(b:Boolean):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "+:", "tail" : "(b: Boolean): BitVector", "member" : "scodec.bits.BitVector.+:", "link" : "scodec\/bits\/BitVector.html#+:(b:Boolean):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "++", "tail" : "(b2: BitVector): BitVector", "member" : "scodec.bits.BitVector.++", "link" : "scodec\/bits\/BitVector.html#++(b2:scodec.bits.BitVector):scodec.bits.BitVector", "kind" : "def"}, {"label" : "clear", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.clear", "link" : "scodec\/bits\/BitVector.html#clear(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "set", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.set", "link" : "scodec\/bits\/BitVector.html#set(n:Long):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "patch", "tail" : "(idx: Long, b: BitVector): BitVector", "member" : "scodec.bits.BitVector.patch", "link" : "scodec\/bits\/BitVector.html#patch(idx:Long,b:scodec.bits.BitVector):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "splice", "tail" : "(idx: Long, b: BitVector): BitVector", "member" : "scodec.bits.BitVector.splice", "link" : "scodec\/bits\/BitVector.html#splice(idx:Long,b:scodec.bits.BitVector):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "insert", "tail" : "(idx: Long, b: Boolean): BitVector", "member" : "scodec.bits.BitVector.insert", "link" : "scodec\/bits\/BitVector.html#insert(idx:Long,b:Boolean):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "lift", "tail" : "(n: Long): Option[Boolean]", "member" : "scodec.bits.BitVector.lift", "link" : "scodec\/bits\/BitVector.html#lift(n:Long):Option[Boolean]", "kind" : "final def"}, {"label" : "apply", "tail" : "(n: Long): Boolean", "member" : "scodec.bits.BitVector.apply", "link" : "scodec\/bits\/BitVector.html#apply(n:Long):Boolean", "kind" : "final def"}, {"label" : "intSize", "tail" : "(): Option[Int]", "member" : "scodec.bits.BitVector.intSize", "link" : "scodec\/bits\/BitVector.html#intSize:Option[Int]", "kind" : "final def"}, {"label" : "sizeLessThanOrEqual", "tail" : "(n: Long): Boolean", "member" : "scodec.bits.BitVector.sizeLessThanOrEqual", "link" : "scodec\/bits\/BitVector.html#sizeLessThanOrEqual(n:Long):Boolean", "kind" : "final def"}, {"label" : "sizeGreaterThanOrEqual", "tail" : "(n: Long): Boolean", "member" : "scodec.bits.BitVector.sizeGreaterThanOrEqual", "link" : "scodec\/bits\/BitVector.html#sizeGreaterThanOrEqual(n:Long):Boolean", "kind" : "final def"}, {"label" : "sizeGreaterThan", "tail" : "(n: Long): Boolean", "member" : "scodec.bits.BitVector.sizeGreaterThan", "link" : "scodec\/bits\/BitVector.html#sizeGreaterThan(n:Long):Boolean", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scodec.bits.BitVector.nonEmpty", "link" : "scodec\/bits\/BitVector.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scodec.bits.BitVector.isEmpty", "link" : "scodec\/bits\/BitVector.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Long", "member" : "scodec.bits.BitVector.length", "link" : "scodec\/bits\/BitVector.html#length:Long", "kind" : "final def"}, {"label" : "nor", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitwiseOperations.nor", "link" : "scodec\/bits\/BitVector.html#nor(other:Repr):Repr", "kind" : "def"}, {"label" : "nand", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitwiseOperations.nand", "link" : "scodec\/bits\/BitVector.html#nand(other:Repr):Repr", "kind" : "def"}, {"label" : "iff", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitwiseOperations.iff", "link" : "scodec\/bits\/BitVector.html#iff(other:Repr):Repr", "kind" : "def"}, {"label" : "implies", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitwiseOperations.implies", "link" : "scodec\/bits\/BitVector.html#implies(other:Repr):Repr", "kind" : "def"}, {"label" : "^", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitwiseOperations.^", "link" : "scodec\/bits\/BitVector.html#^(other:Repr):Repr", "kind" : "final def"}, {"label" : "|", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitwiseOperations.|", "link" : "scodec\/bits\/BitVector.html#|(other:Repr):Repr", "kind" : "final def"}, {"label" : "&", "tail" : "(other: BitVector): BitVector", "member" : "scodec.bits.BitwiseOperations.&", "link" : "scodec\/bits\/BitVector.html#&(other:Repr):Repr", "kind" : "final def"}, {"label" : "unary_~", "tail" : "(): BitVector", "member" : "scodec.bits.BitwiseOperations.unary_~", "link" : "scodec\/bits\/BitVector.html#unary_~():Repr", "kind" : "final def"}, {"label" : ">>>", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitwiseOperations.>>>", "link" : "scodec\/bits\/BitVector.html#>>>(n:Idx):Repr", "kind" : "final def"}, {"label" : ">>", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitwiseOperations.>>", "link" : "scodec\/bits\/BitVector.html#>>(n:Idx):Repr", "kind" : "final def"}, {"label" : "<<", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitwiseOperations.<<", "link" : "scodec\/bits\/BitVector.html#<<(n:Idx):Repr", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/BitVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/BitVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/BitVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/BitVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/BitVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/BitVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/BitVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/BitVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/BitVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/BitVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/BitVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/BitVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/BitVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "align", "tail" : "(): Bytes", "member" : "scodec.bits.BitVector.align", "link" : "scodec\/bits\/BitVector.html#align:scodec.bits.BitVector.Bytes", "kind" : "abstract def"}, {"label" : "take", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.take", "link" : "scodec\/bits\/BitVector.html#take(n:Long):scodec.bits.BitVector", "kind" : "abstract def"}, {"label" : "drop", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.drop", "link" : "scodec\/bits\/BitVector.html#drop(n:Long):scodec.bits.BitVector", "kind" : "abstract def"}, {"label" : "update", "tail" : "(n: Long, high: Boolean): BitVector", "member" : "scodec.bits.BitVector.update", "link" : "scodec\/bits\/BitVector.html#update(n:Long,high:Boolean):scodec.bits.BitVector", "kind" : "abstract def"}, {"label" : "getByte", "tail" : "(n: Long): Byte", "member" : "scodec.bits.BitVector.getByte", "link" : "scodec\/bits\/BitVector.html#getByte(n:Long):Byte", "kind" : "abstract def"}, {"label" : "get", "tail" : "(n: Long): Boolean", "member" : "scodec.bits.BitVector.get", "link" : "scodec\/bits\/BitVector.html#get(n:Long):Boolean", "kind" : "abstract def"}, {"label" : "sizeLessThan", "tail" : "(n: Long): Boolean", "member" : "scodec.bits.BitVector.sizeLessThan", "link" : "scodec\/bits\/BitVector.html#sizeLessThan(n:Long):Boolean", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Long", "member" : "scodec.bits.BitVector.size", "link" : "scodec\/bits\/BitVector.html#size:Long", "kind" : "abstract def"}], "members_object" : [{"label" : "reverseBitsInByte", "tail" : "(b: Byte): Byte", "member" : "scodec.bits.BitVector.reverseBitsInByte", "link" : "scodec\/bits\/BitVector$.html#reverseBitsInByte(b:Byte):Byte", "kind" : "def"}, {"label" : "concat", "tail" : "(vs: Vector[BitVector]): BitVector", "member" : "scodec.bits.BitVector.concat", "link" : "scodec\/bits\/BitVector$.html#concat(vs:Vector[scodec.bits.BitVector]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromMmap", "tail" : "(in: FileChannel, chunkSizeInBytes: Int): BitVector", "member" : "scodec.bits.BitVector.fromMmap", "link" : "scodec\/bits\/BitVector$.html#fromMmap(in:java.nio.channels.FileChannel,chunkSizeInBytes:Int):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromChannel", "tail" : "(in: ReadableByteChannel, chunkSizeInBytes: Int, direct: Boolean): BitVector", "member" : "scodec.bits.BitVector.fromChannel", "link" : "scodec\/bits\/BitVector$.html#fromChannel(in:java.nio.channels.ReadableByteChannel,chunkSizeInBytes:Int,direct:Boolean):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromInputStream", "tail" : "(in: InputStream, chunkSizeInBytes: Int): BitVector", "member" : "scodec.bits.BitVector.fromInputStream", "link" : "scodec\/bits\/BitVector$.html#fromInputStream(in:java.io.InputStream,chunkSizeInBytes:Int):scodec.bits.BitVector", "kind" : "def"}, {"label" : "unfold", "tail" : "(s: S)(f: (S) ⇒ Option[(BitVector, S)]): BitVector", "member" : "scodec.bits.BitVector.unfold", "link" : "scodec\/bits\/BitVector$.html#unfold[S](s:S)(f:S=>Option[(scodec.bits.BitVector,S)]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "concat", "tail" : "(bvs: GenTraversableOnce[BitVector]): BitVector", "member" : "scodec.bits.BitVector.concat", "link" : "scodec\/bits\/BitVector$.html#concat(bvs:scala.collection.GenTraversableOnce[scodec.bits.BitVector]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "encodeAscii", "tail" : "(str: String): Either[CharacterCodingException, BitVector]", "member" : "scodec.bits.BitVector.encodeAscii", "link" : "scodec\/bits\/BitVector$.html#encodeAscii(str:String):Either[java.nio.charset.CharacterCodingException,scodec.bits.BitVector]", "kind" : "def"}, {"label" : "encodeUtf8", "tail" : "(str: String): Either[CharacterCodingException, BitVector]", "member" : "scodec.bits.BitVector.encodeUtf8", "link" : "scodec\/bits\/BitVector$.html#encodeUtf8(str:String):Either[java.nio.charset.CharacterCodingException,scodec.bits.BitVector]", "kind" : "def"}, {"label" : "encodeString", "tail" : "(str: String)(charset: Charset): Either[CharacterCodingException, BitVector]", "member" : "scodec.bits.BitVector.encodeString", "link" : "scodec\/bits\/BitVector$.html#encodeString(str:String)(implicitcharset:java.nio.charset.Charset):Either[java.nio.charset.CharacterCodingException,scodec.bits.BitVector]", "kind" : "def"}, {"label" : "fromValidBase64", "tail" : "(str: String, alphabet: Base64Alphabet): BitVector", "member" : "scodec.bits.BitVector.fromValidBase64", "link" : "scodec\/bits\/BitVector$.html#fromValidBase64(str:String,alphabet:scodec.bits.Bases.Base64Alphabet):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromBase64", "tail" : "(str: String, alphabet: Base64Alphabet): Option[BitVector]", "member" : "scodec.bits.BitVector.fromBase64", "link" : "scodec\/bits\/BitVector$.html#fromBase64(str:String,alphabet:scodec.bits.Bases.Base64Alphabet):Option[scodec.bits.BitVector]", "kind" : "def"}, {"label" : "fromBase64Descriptive", "tail" : "(str: String, alphabet: Base64Alphabet): Either[String, BitVector]", "member" : "scodec.bits.BitVector.fromBase64Descriptive", "link" : "scodec\/bits\/BitVector$.html#fromBase64Descriptive(str:String,alphabet:scodec.bits.Bases.Base64Alphabet):Either[String,scodec.bits.BitVector]", "kind" : "def"}, {"label" : "fromValidHex", "tail" : "(str: String, alphabet: HexAlphabet): BitVector", "member" : "scodec.bits.BitVector.fromValidHex", "link" : "scodec\/bits\/BitVector$.html#fromValidHex(str:String,alphabet:scodec.bits.Bases.HexAlphabet):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromHex", "tail" : "(str: String, alphabet: HexAlphabet): Option[BitVector]", "member" : "scodec.bits.BitVector.fromHex", "link" : "scodec\/bits\/BitVector$.html#fromHex(str:String,alphabet:scodec.bits.Bases.HexAlphabet):Option[scodec.bits.BitVector]", "kind" : "def"}, {"label" : "fromHexDescriptive", "tail" : "(str: String, alphabet: HexAlphabet): Either[String, BitVector]", "member" : "scodec.bits.BitVector.fromHexDescriptive", "link" : "scodec\/bits\/BitVector$.html#fromHexDescriptive(str:String,alphabet:scodec.bits.Bases.HexAlphabet):Either[String,scodec.bits.BitVector]", "kind" : "def"}, {"label" : "fromValidBin", "tail" : "(str: String, alphabet: BinaryAlphabet): BitVector", "member" : "scodec.bits.BitVector.fromValidBin", "link" : "scodec\/bits\/BitVector$.html#fromValidBin(str:String,alphabet:scodec.bits.Bases.BinaryAlphabet):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromBin", "tail" : "(str: String, alphabet: BinaryAlphabet): Option[BitVector]", "member" : "scodec.bits.BitVector.fromBin", "link" : "scodec\/bits\/BitVector$.html#fromBin(str:String,alphabet:scodec.bits.Bases.BinaryAlphabet):Option[scodec.bits.BitVector]", "kind" : "def"}, {"label" : "fromBinDescriptive", "tail" : "(str: String, alphabet: BinaryAlphabet): Either[String, BitVector]", "member" : "scodec.bits.BitVector.fromBinDescriptive", "link" : "scodec\/bits\/BitVector$.html#fromBinDescriptive(str:String,alphabet:scodec.bits.Bases.BinaryAlphabet):Either[String,scodec.bits.BitVector]", "kind" : "def"}, {"label" : "fromUUID", "tail" : "(u: UUID): BitVector", "member" : "scodec.bits.BitVector.fromUUID", "link" : "scodec\/bits\/BitVector$.html#fromUUID(u:java.util.UUID):scodec.bits.BitVector", "kind" : "final def"}, {"label" : "fromLong", "tail" : "(l: Long, size: Int, ordering: ByteOrdering): BitVector", "member" : "scodec.bits.BitVector.fromLong", "link" : "scodec\/bits\/BitVector$.html#fromLong(l:Long,size:Int,ordering:scodec.bits.ByteOrdering):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromInt", "tail" : "(i: Int, size: Int, ordering: ByteOrdering): BitVector", "member" : "scodec.bits.BitVector.fromInt", "link" : "scodec\/bits\/BitVector$.html#fromInt(i:Int,size:Int,ordering:scodec.bits.ByteOrdering):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromShort", "tail" : "(s: Short, size: Int, ordering: ByteOrdering): BitVector", "member" : "scodec.bits.BitVector.fromShort", "link" : "scodec\/bits\/BitVector$.html#fromShort(s:Short,size:Int,ordering:scodec.bits.ByteOrdering):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fromByte", "tail" : "(b: Byte, size: Int): BitVector", "member" : "scodec.bits.BitVector.fromByte", "link" : "scodec\/bits\/BitVector$.html#fromByte(b:Byte,size:Int):scodec.bits.BitVector", "kind" : "def"}, {"label" : "fill", "tail" : "(n: Long)(high: Boolean): BitVector", "member" : "scodec.bits.BitVector.fill", "link" : "scodec\/bits\/BitVector$.html#fill(n:Long)(high:Boolean):scodec.bits.BitVector", "kind" : "def"}, {"label" : "view", "tail" : "(bs: Array[Byte], sizeInBits: Long): BitVector", "member" : "scodec.bits.BitVector.view", "link" : "scodec\/bits\/BitVector$.html#view(bs:Array[Byte],sizeInBits:Long):scodec.bits.BitVector", "kind" : "def"}, {"label" : "view", "tail" : "(bs: Array[Byte]): BitVector", "member" : "scodec.bits.BitVector.view", "link" : "scodec\/bits\/BitVector$.html#view(bs:Array[Byte]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "view", "tail" : "(buffer: ByteBuffer, sizeInBits: Long): BitVector", "member" : "scodec.bits.BitVector.view", "link" : "scodec\/bits\/BitVector$.html#view(buffer:java.nio.ByteBuffer,sizeInBits:Long):scodec.bits.BitVector", "kind" : "def"}, {"label" : "view", "tail" : "(buffer: ByteBuffer): BitVector", "member" : "scodec.bits.BitVector.view", "link" : "scodec\/bits\/BitVector$.html#view(buffer:java.nio.ByteBuffer):scodec.bits.BitVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: A*)(arg0: Integral[A]): BitVector", "member" : "scodec.bits.BitVector.apply", "link" : "scodec\/bits\/BitVector$.html#apply[A](bytes:A*)(implicitevidence$1:Integral[A]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bs: GenTraversableOnce[Byte]): BitVector", "member" : "scodec.bits.BitVector.apply", "link" : "scodec\/bits\/BitVector$.html#apply(bs:scala.collection.GenTraversableOnce[Byte]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bs: Array[Byte]): BitVector", "member" : "scodec.bits.BitVector.apply", "link" : "scodec\/bits\/BitVector$.html#apply(bs:Array[Byte]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "apply", "tail" : "(buffer: ByteBuffer): BitVector", "member" : "scodec.bits.BitVector.apply", "link" : "scodec\/bits\/BitVector$.html#apply(buffer:java.nio.ByteBuffer):scodec.bits.BitVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bs: ByteVector): BitVector", "member" : "scodec.bits.BitVector.apply", "link" : "scodec\/bits\/BitVector$.html#apply(bs:scodec.bits.ByteVector):scodec.bits.BitVector", "kind" : "def"}, {"label" : "low", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.low", "link" : "scodec\/bits\/BitVector$.html#low(n:Long):scodec.bits.BitVector", "kind" : "def"}, {"label" : "high", "tail" : "(n: Long): BitVector", "member" : "scodec.bits.BitVector.high", "link" : "scodec\/bits\/BitVector$.html#high(n:Long):scodec.bits.BitVector", "kind" : "def"}, {"label" : "bits", "tail" : "(b: Iterable[Boolean]): BitVector", "member" : "scodec.bits.BitVector.bits", "link" : "scodec\/bits\/BitVector$.html#bits(b:Iterable[Boolean]):scodec.bits.BitVector", "kind" : "def"}, {"label" : "bit", "tail" : "(high: Boolean): BitVector", "member" : "scodec.bits.BitVector.bit", "link" : "scodec\/bits\/BitVector$.html#bit(high:Boolean):scodec.bits.BitVector", "kind" : "def"}, {"label" : "highByte", "tail" : ": BitVector", "member" : "scodec.bits.BitVector.highByte", "link" : "scodec\/bits\/BitVector$.html#highByte:scodec.bits.BitVector", "kind" : "val"}, {"label" : "lowByte", "tail" : ": BitVector", "member" : "scodec.bits.BitVector.lowByte", "link" : "scodec\/bits\/BitVector$.html#lowByte:scodec.bits.BitVector", "kind" : "val"}, {"label" : "one", "tail" : ": BitVector", "member" : "scodec.bits.BitVector.one", "link" : "scodec\/bits\/BitVector$.html#one:scodec.bits.BitVector", "kind" : "val"}, {"label" : "zero", "tail" : ": BitVector", "member" : "scodec.bits.BitVector.zero", "link" : "scodec\/bits\/BitVector$.html#zero:scodec.bits.BitVector", "kind" : "val"}, {"label" : "empty", "tail" : ": BitVector", "member" : "scodec.bits.BitVector.empty", "link" : "scodec\/bits\/BitVector$.html#empty:scodec.bits.BitVector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/BitVector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/BitVector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/BitVector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/BitVector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/BitVector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/BitVector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/BitVector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitVector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitVector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitVector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/BitVector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/BitVector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/BitVector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/BitVector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/BitVector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/BitVector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/BitVector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/BitVector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/BitVector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scodec\/bits\/BitVector.html", "kind" : "class"}, {"name" : "scodec.bits.BitwiseOperations", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scodec\/bits\/BitwiseOperations.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scodec\/bits\/BitwiseOperations.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BitwiseOperations[Repr, Idx]) ⇒ Boolean, msg: ⇒ Any): BitwiseOperations[Repr, Idx]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitwiseOperations.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BitwiseOperations[Repr, Idx]) ⇒ Boolean): BitwiseOperations[Repr, Idx]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitwiseOperations.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BitwiseOperations[Repr, Idx]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitwiseOperations.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BitwiseOperations[Repr, Idx]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/BitwiseOperations.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BitwiseOperations[Repr, Idx], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scodec\/bits\/BitwiseOperations.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BitwiseOperations[Repr, Idx], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scodec\/bits\/BitwiseOperations.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "nor", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.nor", "link" : "scodec\/bits\/BitwiseOperations.html#nor(other:Repr):Repr", "kind" : "def"}, {"label" : "nand", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.nand", "link" : "scodec\/bits\/BitwiseOperations.html#nand(other:Repr):Repr", "kind" : "def"}, {"label" : "iff", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.iff", "link" : "scodec\/bits\/BitwiseOperations.html#iff(other:Repr):Repr", "kind" : "def"}, {"label" : "implies", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.implies", "link" : "scodec\/bits\/BitwiseOperations.html#implies(other:Repr):Repr", "kind" : "def"}, {"label" : "^", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.^", "link" : "scodec\/bits\/BitwiseOperations.html#^(other:Repr):Repr", "kind" : "final def"}, {"label" : "|", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.|", "link" : "scodec\/bits\/BitwiseOperations.html#|(other:Repr):Repr", "kind" : "final def"}, {"label" : "&", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.&", "link" : "scodec\/bits\/BitwiseOperations.html#&(other:Repr):Repr", "kind" : "final def"}, {"label" : "unary_~", "tail" : "(): Repr", "member" : "scodec.bits.BitwiseOperations.unary_~", "link" : "scodec\/bits\/BitwiseOperations.html#unary_~():Repr", "kind" : "final def"}, {"label" : ">>>", "tail" : "(n: Idx): Repr", "member" : "scodec.bits.BitwiseOperations.>>>", "link" : "scodec\/bits\/BitwiseOperations.html#>>>(n:Idx):Repr", "kind" : "final def"}, {"label" : ">>", "tail" : "(n: Idx): Repr", "member" : "scodec.bits.BitwiseOperations.>>", "link" : "scodec\/bits\/BitwiseOperations.html#>>(n:Idx):Repr", "kind" : "final def"}, {"label" : "<<", "tail" : "(n: Idx): Repr", "member" : "scodec.bits.BitwiseOperations.<<", "link" : "scodec\/bits\/BitwiseOperations.html#<<(n:Idx):Repr", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/BitwiseOperations.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/BitwiseOperations.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/BitwiseOperations.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/BitwiseOperations.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/BitwiseOperations.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/BitwiseOperations.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/BitwiseOperations.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitwiseOperations.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitwiseOperations.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BitwiseOperations.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/BitwiseOperations.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/BitwiseOperations.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/BitwiseOperations.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/BitwiseOperations.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/BitwiseOperations.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/BitwiseOperations.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/BitwiseOperations.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/BitwiseOperations.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/BitwiseOperations.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "xor", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.xor", "link" : "scodec\/bits\/BitwiseOperations.html#xor(other:Repr):Repr", "kind" : "abstract def"}, {"label" : "or", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.or", "link" : "scodec\/bits\/BitwiseOperations.html#or(other:Repr):Repr", "kind" : "abstract def"}, {"label" : "and", "tail" : "(other: Repr): Repr", "member" : "scodec.bits.BitwiseOperations.and", "link" : "scodec\/bits\/BitwiseOperations.html#and(other:Repr):Repr", "kind" : "abstract def"}, {"label" : "not", "tail" : "(): Repr", "member" : "scodec.bits.BitwiseOperations.not", "link" : "scodec\/bits\/BitwiseOperations.html#not:Repr", "kind" : "abstract def"}, {"label" : "rotateRight", "tail" : "(n: Idx): Repr", "member" : "scodec.bits.BitwiseOperations.rotateRight", "link" : "scodec\/bits\/BitwiseOperations.html#rotateRight(n:Idx):Repr", "kind" : "abstract def"}, {"label" : "rotateLeft", "tail" : "(n: Idx): Repr", "member" : "scodec.bits.BitwiseOperations.rotateLeft", "link" : "scodec\/bits\/BitwiseOperations.html#rotateLeft(n:Idx):Repr", "kind" : "abstract def"}, {"label" : "shiftRight", "tail" : "(n: Idx, signExtension: Boolean): Repr", "member" : "scodec.bits.BitwiseOperations.shiftRight", "link" : "scodec\/bits\/BitwiseOperations.html#shiftRight(n:Idx,signExtension:Boolean):Repr", "kind" : "abstract def"}, {"label" : "shiftLeft", "tail" : "(n: Idx): Repr", "member" : "scodec.bits.BitwiseOperations.shiftLeft", "link" : "scodec\/bits\/BitwiseOperations.html#shiftLeft(n:Idx):Repr", "kind" : "abstract def"}], "shortDescription" : "Bitwise operations on a value of type Repr.", "trait" : "scodec\/bits\/BitwiseOperations.html", "kind" : "trait"}, {"name" : "scodec.bits.BuildInfo", "shortDescription" : "This object was generated by sbt-buildinfo.", "object" : "scodec\/bits\/BuildInfo$.html", "members_object" : [{"label" : "toString", "tail" : ": String", "member" : "scodec.bits.BuildInfo.toString", "link" : "scodec\/bits\/BuildInfo$.html#toString:String", "kind" : "val"}, {"label" : "gitHeadCommit", "tail" : ": Option[String]", "member" : "scodec.bits.BuildInfo.gitHeadCommit", "link" : "scodec\/bits\/BuildInfo$.html#gitHeadCommit:Option[String]", "kind" : "val"}, {"label" : "scalaVersion", "tail" : ": String", "member" : "scodec.bits.BuildInfo.scalaVersion", "link" : "scodec\/bits\/BuildInfo$.html#scalaVersion:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "scodec.bits.BuildInfo.version", "link" : "scodec\/bits\/BuildInfo$.html#version:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/BuildInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/BuildInfo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/BuildInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/BuildInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/BuildInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/BuildInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/BuildInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BuildInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BuildInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/BuildInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/BuildInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/BuildInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/BuildInfo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/BuildInfo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/BuildInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/BuildInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/BuildInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scodec.bits.ByteOrdering", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scodec\/bits\/ByteOrdering.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scodec\/bits\/ByteOrdering.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteOrdering) ⇒ Boolean, msg: ⇒ Any): ByteOrdering", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteOrdering.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteOrdering) ⇒ Boolean): ByteOrdering", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteOrdering.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ByteOrdering", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteOrdering.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ByteOrdering", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteOrdering.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ByteOrdering, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scodec\/bits\/ByteOrdering.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ByteOrdering, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scodec\/bits\/ByteOrdering.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/ByteOrdering.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/ByteOrdering.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/ByteOrdering.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/ByteOrdering.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/ByteOrdering.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/ByteOrdering.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/ByteOrdering.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteOrdering.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteOrdering.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteOrdering.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/ByteOrdering.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/ByteOrdering.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/ByteOrdering.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/ByteOrdering.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/ByteOrdering.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/ByteOrdering.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/ByteOrdering.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/ByteOrdering.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/ByteOrdering.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toJava", "tail" : "(): ByteOrder", "member" : "scodec.bits.ByteOrdering.toJava", "link" : "scodec\/bits\/ByteOrdering.html#toJava:java.nio.ByteOrder", "kind" : "abstract def"}], "shortDescription" : "Enumeration of byte ordering.", "object" : "scodec\/bits\/ByteOrdering$.html", "members_object" : [{"label" : "LittleEndian", "tail" : "", "member" : "scodec.bits.ByteOrdering.LittleEndian", "link" : "scodec\/bits\/ByteOrdering$.html#LittleEndian", "kind" : "object"}, {"label" : "BigEndian", "tail" : "", "member" : "scodec.bits.ByteOrdering.BigEndian", "link" : "scodec\/bits\/ByteOrdering$.html#BigEndian", "kind" : "object"}, {"label" : "fromJava", "tail" : "(bo: ByteOrder): ByteOrdering", "member" : "scodec.bits.ByteOrdering.fromJava", "link" : "scodec\/bits\/ByteOrdering$.html#fromJava(bo:java.nio.ByteOrder):scodec.bits.ByteOrdering", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/ByteOrdering$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/ByteOrdering$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/ByteOrdering$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/ByteOrdering$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/ByteOrdering$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/ByteOrdering$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/ByteOrdering$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteOrdering$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteOrdering$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteOrdering$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/ByteOrdering$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/ByteOrdering$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/ByteOrdering$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/ByteOrdering$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/ByteOrdering$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/ByteOrdering$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/ByteOrdering$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/ByteOrdering$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/ByteOrdering$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scodec\/bits\/ByteOrdering.html", "kind" : "trait"}, {"name" : "scodec.bits.ByteVector", "shortDescription" : "An immutable vector of bytes, backed by a balanced binary tree ofchunks.", "object" : "scodec\/bits\/ByteVector$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scodec\/bits\/ByteVector.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scodec\/bits\/ByteVector.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteVector) ⇒ Boolean, msg: ⇒ Any): ByteVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteVector.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteVector) ⇒ Boolean): ByteVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteVector.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ByteVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteVector.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ByteVector", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/ByteVector.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ByteVector, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scodec\/bits\/ByteVector.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ByteVector, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scodec\/bits\/ByteVector.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scodec.bits.ByteVector.writeReplace", "link" : "scodec\/bits\/ByteVector.html#writeReplace():AnyRef", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scodec.bits.ByteVector.toString", "link" : "scodec\/bits\/ByteVector.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scodec.bits.ByteVector.equals", "link" : "scodec\/bits\/ByteVector.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "===", "tail" : "(other: ByteVector): Boolean", "member" : "scodec.bits.ByteVector.===", "link" : "scodec\/bits\/ByteVector.html#===(other:scodec.bits.ByteVector):Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : ": Int", "member" : "scodec.bits.ByteVector.hashCode", "link" : "scodec\/bits\/ByteVector.html#hashCode:Int", "kind" : "lazy val"}, {"label" : "decrypt", "tail" : "(ci: Cipher, key: Key, aparams: Option[AlgorithmParameters])(sr: SecureRandom): Either[GeneralSecurityException, ByteVector]", "member" : "scodec.bits.ByteVector.decrypt", "link" : "scodec\/bits\/ByteVector.html#decrypt(ci:javax.crypto.Cipher,key:java.security.Key,aparams:Option[java.security.AlgorithmParameters])(implicitsr:java.security.SecureRandom):Either[java.security.GeneralSecurityException,scodec.bits.ByteVector]", "kind" : "final def"}, {"label" : "encrypt", "tail" : "(ci: Cipher, key: Key, aparams: Option[AlgorithmParameters])(sr: SecureRandom): Either[GeneralSecurityException, ByteVector]", "member" : "scodec.bits.ByteVector.encrypt", "link" : "scodec\/bits\/ByteVector.html#encrypt(ci:javax.crypto.Cipher,key:java.security.Key,aparams:Option[java.security.AlgorithmParameters])(implicitsr:java.security.SecureRandom):Either[java.security.GeneralSecurityException,scodec.bits.ByteVector]", "kind" : "final def"}, {"label" : "digest", "tail" : "(digest: MessageDigest): ByteVector", "member" : "scodec.bits.ByteVector.digest", "link" : "scodec\/bits\/ByteVector.html#digest(digest:java.security.MessageDigest):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "digest", "tail" : "(algorithm: String): ByteVector", "member" : "scodec.bits.ByteVector.digest", "link" : "scodec\/bits\/ByteVector.html#digest(algorithm:String):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "inflate", "tail" : "(chunkSize: Int, nowrap: Boolean): Either[DataFormatException, ByteVector]", "member" : "scodec.bits.ByteVector.inflate", "link" : "scodec\/bits\/ByteVector.html#inflate(chunkSize:Int,nowrap:Boolean):Either[java.util.zip.DataFormatException,scodec.bits.ByteVector]", "kind" : "final def"}, {"label" : "deflate", "tail" : "(level: Int, strategy: Int, nowrap: Boolean, chunkSize: Int): ByteVector", "member" : "scodec.bits.ByteVector.deflate", "link" : "scodec\/bits\/ByteVector.html#deflate(level:Int,strategy:Int,nowrap:Boolean,chunkSize:Int):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "zipWithI3", "tail" : "(other: ByteVector, other2: ByteVector, other3: ByteVector)(op: (Byte, Byte, Byte, Byte) ⇒ Int): ByteVector", "member" : "scodec.bits.ByteVector.zipWithI3", "link" : "scodec\/bits\/ByteVector.html#zipWithI3(other:scodec.bits.ByteVector,other2:scodec.bits.ByteVector,other3:scodec.bits.ByteVector)(op:(Byte,Byte,Byte,Byte)=>Int):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "zipWithI2", "tail" : "(other: ByteVector, other2: ByteVector)(op: (Byte, Byte, Byte) ⇒ Int): ByteVector", "member" : "scodec.bits.ByteVector.zipWithI2", "link" : "scodec\/bits\/ByteVector.html#zipWithI2(other:scodec.bits.ByteVector,other2:scodec.bits.ByteVector)(op:(Byte,Byte,Byte)=>Int):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "zipWithI", "tail" : "(other: ByteVector)(op: (Byte, Byte) ⇒ Int): ByteVector", "member" : "scodec.bits.ByteVector.zipWithI", "link" : "scodec\/bits\/ByteVector.html#zipWithI(other:scodec.bits.ByteVector)(op:(Byte,Byte)=>Int):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "zipWith3", "tail" : "(other: ByteVector, other2: ByteVector, other3: ByteVector)(f: (Byte, Byte, Byte, Byte) ⇒ Byte): ByteVector", "member" : "scodec.bits.ByteVector.zipWith3", "link" : "scodec\/bits\/ByteVector.html#zipWith3(other:scodec.bits.ByteVector,other2:scodec.bits.ByteVector,other3:scodec.bits.ByteVector)(f:(Byte,Byte,Byte,Byte)=>Byte):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "zipWith2", "tail" : "(other: ByteVector, other2: ByteVector)(f: (Byte, Byte, Byte) ⇒ Byte): ByteVector", "member" : "scodec.bits.ByteVector.zipWith2", "link" : "scodec\/bits\/ByteVector.html#zipWith2(other:scodec.bits.ByteVector,other2:scodec.bits.ByteVector)(f:(Byte,Byte,Byte)=>Byte):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(other: ByteVector)(f: (Byte, Byte) ⇒ Byte): ByteVector", "member" : "scodec.bits.ByteVector.zipWith", "link" : "scodec\/bits\/ByteVector.html#zipWith(other:scodec.bits.ByteVector)(f:(Byte,Byte)=>Byte):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "xor", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.ByteVector.xor", "link" : "scodec\/bits\/ByteVector.html#xor(other:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "and", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.ByteVector.and", "link" : "scodec\/bits\/ByteVector.html#and(other:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "or", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.ByteVector.or", "link" : "scodec\/bits\/ByteVector.html#or(other:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "not", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.not", "link" : "scodec\/bits\/ByteVector.html#not:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "decodeAscii", "tail" : "(): Either[CharacterCodingException, String]", "member" : "scodec.bits.ByteVector.decodeAscii", "link" : "scodec\/bits\/ByteVector.html#decodeAscii:Either[java.nio.charset.CharacterCodingException,String]", "kind" : "final def"}, {"label" : "decodeUtf8", "tail" : "(): Either[CharacterCodingException, String]", "member" : "scodec.bits.ByteVector.decodeUtf8", "link" : "scodec\/bits\/ByteVector.html#decodeUtf8:Either[java.nio.charset.CharacterCodingException,String]", "kind" : "final def"}, {"label" : "decodeString", "tail" : "(charset: Charset): Either[CharacterCodingException, String]", "member" : "scodec.bits.ByteVector.decodeString", "link" : "scodec\/bits\/ByteVector.html#decodeString(implicitcharset:java.nio.charset.Charset):Either[java.nio.charset.CharacterCodingException,String]", "kind" : "final def"}, {"label" : "toUUID", "tail" : "(): UUID", "member" : "scodec.bits.ByteVector.toUUID", "link" : "scodec\/bits\/ByteVector.html#toUUID:java.util.UUID", "kind" : "final def"}, {"label" : "toLong", "tail" : "(signed: Boolean, ordering: ByteOrdering): Long", "member" : "scodec.bits.ByteVector.toLong", "link" : "scodec\/bits\/ByteVector.html#toLong(signed:Boolean,ordering:scodec.bits.ByteOrdering):Long", "kind" : "final def"}, {"label" : "toInt", "tail" : "(signed: Boolean, ordering: ByteOrdering): Int", "member" : "scodec.bits.ByteVector.toInt", "link" : "scodec\/bits\/ByteVector.html#toInt(signed:Boolean,ordering:scodec.bits.ByteOrdering):Int", "kind" : "final def"}, {"label" : "toShort", "tail" : "(signed: Boolean, ordering: ByteOrdering): Short", "member" : "scodec.bits.ByteVector.toShort", "link" : "scodec\/bits\/ByteVector.html#toShort(signed:Boolean,ordering:scodec.bits.ByteOrdering):Short", "kind" : "final def"}, {"label" : "toByte", "tail" : "(signed: Boolean): Byte", "member" : "scodec.bits.ByteVector.toByte", "link" : "scodec\/bits\/ByteVector.html#toByte(signed:Boolean):Byte", "kind" : "final def"}, {"label" : "toBase64", "tail" : "(alphabet: Base64Alphabet): String", "member" : "scodec.bits.ByteVector.toBase64", "link" : "scodec\/bits\/ByteVector.html#toBase64(alphabet:scodec.bits.Bases.Base64Alphabet):String", "kind" : "final def"}, {"label" : "toBase64", "tail" : "(): String", "member" : "scodec.bits.ByteVector.toBase64", "link" : "scodec\/bits\/ByteVector.html#toBase64:String", "kind" : "final def"}, {"label" : "toHex", "tail" : "(alphabet: HexAlphabet): String", "member" : "scodec.bits.ByteVector.toHex", "link" : "scodec\/bits\/ByteVector.html#toHex(alphabet:scodec.bits.Bases.HexAlphabet):String", "kind" : "final def"}, {"label" : "toHex", "tail" : "(): String", "member" : "scodec.bits.ByteVector.toHex", "link" : "scodec\/bits\/ByteVector.html#toHex:String", "kind" : "final def"}, {"label" : "toBin", "tail" : "(alphabet: BinaryAlphabet): String", "member" : "scodec.bits.ByteVector.toBin", "link" : "scodec\/bits\/ByteVector.html#toBin(alphabet:scodec.bits.Bases.BinaryAlphabet):String", "kind" : "final def"}, {"label" : "toBin", "tail" : "(): String", "member" : "scodec.bits.ByteVector.toBin", "link" : "scodec\/bits\/ByteVector.html#toBin:String", "kind" : "final def"}, {"label" : "toByteBuffer", "tail" : "(): ByteBuffer", "member" : "scodec.bits.ByteVector.toByteBuffer", "link" : "scodec\/bits\/ByteVector.html#toByteBuffer:java.nio.ByteBuffer", "kind" : "final def"}, {"label" : "unbuffer", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.unbuffer", "link" : "scodec\/bits\/ByteVector.html#unbuffer:scodec.bits.ByteVector", "kind" : "def"}, {"label" : "bufferBy", "tail" : "(chunkSize: Int): ByteVector", "member" : "scodec.bits.ByteVector.bufferBy", "link" : "scodec\/bits\/ByteVector.html#bufferBy(chunkSize:Int):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "buffer", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.buffer", "link" : "scodec\/bits\/ByteVector.html#buffer:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "bits", "tail" : "(): BitVector", "member" : "scodec.bits.ByteVector.bits", "link" : "scodec\/bits\/ByteVector.html#bits:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "toBitVector", "tail" : "(): BitVector", "member" : "scodec.bits.ByteVector.toBitVector", "link" : "scodec\/bits\/ByteVector.html#toBitVector:scodec.bits.BitVector", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Iterable[Byte]", "member" : "scodec.bits.ByteVector.toIterable", "link" : "scodec\/bits\/ByteVector.html#toIterable:Iterable[Byte]", "kind" : "final def"}, {"label" : "toSeq", "tail" : "(): Seq[Byte]", "member" : "scodec.bits.ByteVector.toSeq", "link" : "scodec\/bits\/ByteVector.html#toSeq:Seq[Byte]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Byte]", "member" : "scodec.bits.ByteVector.toIndexedSeq", "link" : "scodec\/bits\/ByteVector.html#toIndexedSeq:IndexedSeq[Byte]", "kind" : "final def"}, {"label" : "copyToStream", "tail" : "(s: OutputStream): Unit", "member" : "scodec.bits.ByteVector.copyToStream", "link" : "scodec\/bits\/ByteVector.html#copyToStream(s:java.io.OutputStream):Unit", "kind" : "final def"}, {"label" : "copyToBuffer", "tail" : "(buffer: ByteBuffer): Int", "member" : "scodec.bits.ByteVector.copyToBuffer", "link" : "scodec\/bits\/ByteVector.html#copyToBuffer(buffer:java.nio.ByteBuffer):Int", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(xs: Array[Byte], start: Int, offset: Long, size: Int): Unit", "member" : "scodec.bits.ByteVector.copyToArray", "link" : "scodec\/bits\/ByteVector.html#copyToArray(xs:Array[Byte],start:Int,offset:Long,size:Int):Unit", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(xs: Array[Byte], start: Int): Unit", "member" : "scodec.bits.ByteVector.copyToArray", "link" : "scodec\/bits\/ByteVector.html#copyToArray(xs:Array[Byte],start:Int):Unit", "kind" : "final def"}, {"label" : "toArray", "tail" : "(): Array[Byte]", "member" : "scodec.bits.ByteVector.toArray", "link" : "scodec\/bits\/ByteVector.html#toArray:Array[Byte]", "kind" : "final def"}, {"label" : "copy", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.copy", "link" : "scodec\/bits\/ByteVector.html#copy:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "partialCompact", "tail" : "(chunkSize: Long): ByteVector", "member" : "scodec.bits.ByteVector.partialCompact", "link" : "scodec\/bits\/ByteVector.html#partialCompact(chunkSize:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "compact", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.compact", "link" : "scodec\/bits\/ByteVector.html#compact:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "rotateRight", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.rotateRight", "link" : "scodec\/bits\/ByteVector.html#rotateRight(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "rotateLeft", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.rotateLeft", "link" : "scodec\/bits\/ByteVector.html#rotateLeft(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "shiftRight", "tail" : "(n: Long, signExtension: Boolean): ByteVector", "member" : "scodec.bits.ByteVector.shiftRight", "link" : "scodec\/bits\/ByteVector.html#shiftRight(n:Long,signExtension:Boolean):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "shiftLeft", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.shiftLeft", "link" : "scodec\/bits\/ByteVector.html#shiftLeft(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "reverse", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.reverse", "link" : "scodec\/bits\/ByteVector.html#reverse:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "mapI", "tail" : "(f: (Byte) ⇒ Int): ByteVector", "member" : "scodec.bits.ByteVector.mapI", "link" : "scodec\/bits\/ByteVector.html#mapI(f:Byte=>Int):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Byte) ⇒ Byte): ByteVector", "member" : "scodec.bits.ByteVector.map", "link" : "scodec\/bits\/ByteVector.html#map(f:Byte=>Byte):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "padLeft", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.padLeft", "link" : "scodec\/bits\/ByteVector.html#padLeft(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "padRight", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.padRight", "link" : "scodec\/bits\/ByteVector.html#padRight(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "padTo", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.padTo", "link" : "scodec\/bits\/ByteVector.html#padTo(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Byte]", "member" : "scodec.bits.ByteVector.lastOption", "link" : "scodec\/bits\/ByteVector.html#lastOption:Option[Byte]", "kind" : "final def"}, {"label" : "last", "tail" : "(): Byte", "member" : "scodec.bits.ByteVector.last", "link" : "scodec\/bits\/ByteVector.html#last:Byte", "kind" : "final def"}, {"label" : "init", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.init", "link" : "scodec\/bits\/ByteVector.html#init:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "tail", "tail" : "(): ByteVector", "member" : "scodec.bits.ByteVector.tail", "link" : "scodec\/bits\/ByteVector.html#tail:scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[Byte]", "member" : "scodec.bits.ByteVector.headOption", "link" : "scodec\/bits\/ByteVector.html#headOption:Option[Byte]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Byte", "member" : "scodec.bits.ByteVector.head", "link" : "scodec\/bits\/ByteVector.html#head:Byte", "kind" : "final def"}, {"label" : "grouped", "tail" : "(chunkSize: Long): Stream[ByteVector]", "member" : "scodec.bits.ByteVector.grouped", "link" : "scodec\/bits\/ByteVector.html#grouped(chunkSize:Long):Stream[scodec.bits.ByteVector]", "kind" : "final def"}, {"label" : "containsSlice", "tail" : "(slice: ByteVector): Boolean", "member" : "scodec.bits.ByteVector.containsSlice", "link" : "scodec\/bits\/ByteVector.html#containsSlice(slice:scodec.bits.ByteVector):Boolean", "kind" : "final def"}, {"label" : "indexOfSlice", "tail" : "(slice: ByteVector, from: Long): Long", "member" : "scodec.bits.ByteVector.indexOfSlice", "link" : "scodec\/bits\/ByteVector.html#indexOfSlice(slice:scodec.bits.ByteVector,from:Long):Long", "kind" : "final def"}, {"label" : "indexOfSlice", "tail" : "(slice: ByteVector): Long", "member" : "scodec.bits.ByteVector.indexOfSlice", "link" : "scodec\/bits\/ByteVector.html#indexOfSlice(slice:scodec.bits.ByteVector):Long", "kind" : "final def"}, {"label" : "endsWith", "tail" : "(b: ByteVector): Boolean", "member" : "scodec.bits.ByteVector.endsWith", "link" : "scodec\/bits\/ByteVector.html#endsWith(b:scodec.bits.ByteVector):Boolean", "kind" : "final def"}, {"label" : "startsWith", "tail" : "(b: ByteVector): Boolean", "member" : "scodec.bits.ByteVector.startsWith", "link" : "scodec\/bits\/ByteVector.html#startsWith(b:scodec.bits.ByteVector):Boolean", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (Byte) ⇒ Unit): Unit", "member" : "scodec.bits.ByteVector.foreach", "link" : "scodec\/bits\/ByteVector.html#foreach(f:Byte=>Unit):Unit", "kind" : "final def"}, {"label" : "foldRightBB", "tail" : "(z: A)(f: (ByteBuffer, A) ⇒ A): A", "member" : "scodec.bits.ByteVector.foldRightBB", "link" : "scodec\/bits\/ByteVector.html#foldRightBB[A](z:A)(f:(java.nio.ByteBuffer,A)=>A):A", "kind" : "final def"}, {"label" : "foldLeftBB", "tail" : "(z: A)(f: (A, ByteBuffer) ⇒ A): A", "member" : "scodec.bits.ByteVector.foldLeftBB", "link" : "scodec\/bits\/ByteVector.html#foldLeftBB[A](z:A)(f:(A,java.nio.ByteBuffer)=>A):A", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: A)(f: (Byte, A) ⇒ A): A", "member" : "scodec.bits.ByteVector.foldRight", "link" : "scodec\/bits\/ByteVector.html#foldRight[A](z:A)(f:(Byte,A)=>A):A", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(z: A)(f: (A, Byte) ⇒ A): A", "member" : "scodec.bits.ByteVector.foldLeft", "link" : "scodec\/bits\/ByteVector.html#foldLeft[A](z:A)(f:(A,Byte)=>A):A", "kind" : "final def"}, {"label" : "consume", "tail" : "(n: Long)(decode: (ByteVector) ⇒ Either[String, A]): Either[String, (ByteVector, A)]", "member" : "scodec.bits.ByteVector.consume", "link" : "scodec\/bits\/ByteVector.html#consume[A](n:Long)(decode:scodec.bits.ByteVector=>Either[String,A]):Either[String,(scodec.bits.ByteVector,A)]", "kind" : "final def"}, {"label" : "acquire", "tail" : "(n: Long): Either[String, ByteVector]", "member" : "scodec.bits.ByteVector.acquire", "link" : "scodec\/bits\/ByteVector.html#acquire(n:Long):Either[String,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Long, until: Long): ByteVector", "member" : "scodec.bits.ByteVector.slice", "link" : "scodec\/bits\/ByteVector.html#slice(from:Long,until:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "splitAt", "tail" : "(n: Long): (ByteVector, ByteVector)", "member" : "scodec.bits.ByteVector.splitAt", "link" : "scodec\/bits\/ByteVector.html#splitAt(n:Long):(scodec.bits.ByteVector,scodec.bits.ByteVector)", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(f: (Byte) ⇒ Boolean): ByteVector", "member" : "scodec.bits.ByteVector.takeWhile", "link" : "scodec\/bits\/ByteVector.html#takeWhile(f:Byte=>Boolean):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "takeRight", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.takeRight", "link" : "scodec\/bits\/ByteVector.html#takeRight(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.take", "link" : "scodec\/bits\/ByteVector.html#take(n:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(f: (Byte) ⇒ Boolean): ByteVector", "member" : "scodec.bits.ByteVector.dropWhile", "link" : "scodec\/bits\/ByteVector.html#dropWhile(f:Byte=>Boolean):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "dropRight", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.dropRight", "link" : "scodec\/bits\/ByteVector.html#dropRight(n:Long):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.ByteVector.drop", "link" : "scodec\/bits\/ByteVector.html#drop(n:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : ":+", "tail" : "(byte: Byte): ByteVector", "member" : "scodec.bits.ByteVector.:+", "link" : "scodec\/bits\/ByteVector.html#:+(byte:Byte):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "+:", "tail" : "(byte: Byte): ByteVector", "member" : "scodec.bits.ByteVector.+:", "link" : "scodec\/bits\/ByteVector.html#+:(byte:Byte):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "++", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.ByteVector.++", "link" : "scodec\/bits\/ByteVector.html#++(other:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "patch", "tail" : "(idx: Long, b: ByteVector): ByteVector", "member" : "scodec.bits.ByteVector.patch", "link" : "scodec\/bits\/ByteVector.html#patch(idx:Long,b:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "splice", "tail" : "(idx: Long, b: ByteVector): ByteVector", "member" : "scodec.bits.ByteVector.splice", "link" : "scodec\/bits\/ByteVector.html#splice(idx:Long,b:scodec.bits.ByteVector):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "insert", "tail" : "(idx: Long, b: Byte): ByteVector", "member" : "scodec.bits.ByteVector.insert", "link" : "scodec\/bits\/ByteVector.html#insert(idx:Long,b:Byte):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "update", "tail" : "(idx: Long, b: Byte): ByteVector", "member" : "scodec.bits.ByteVector.update", "link" : "scodec\/bits\/ByteVector.html#update(idx:Long,b:Byte):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "lift", "tail" : "(index: Long): Option[Byte]", "member" : "scodec.bits.ByteVector.lift", "link" : "scodec\/bits\/ByteVector.html#lift(index:Long):Option[Byte]", "kind" : "final def"}, {"label" : "apply", "tail" : "(index: Long): Byte", "member" : "scodec.bits.ByteVector.apply", "link" : "scodec\/bits\/ByteVector.html#apply(index:Long):Byte", "kind" : "final def"}, {"label" : "get", "tail" : "(index: Long): Byte", "member" : "scodec.bits.ByteVector.get", "link" : "scodec\/bits\/ByteVector.html#get(index:Long):Byte", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scodec.bits.ByteVector.nonEmpty", "link" : "scodec\/bits\/ByteVector.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scodec.bits.ByteVector.isEmpty", "link" : "scodec\/bits\/ByteVector.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Long", "member" : "scodec.bits.ByteVector.length", "link" : "scodec\/bits\/ByteVector.html#length:Long", "kind" : "final def"}, {"label" : "intSize", "tail" : "(): Option[Int]", "member" : "scodec.bits.ByteVector.intSize", "link" : "scodec\/bits\/ByteVector.html#intSize:Option[Int]", "kind" : "final def"}, {"label" : "nor", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.BitwiseOperations.nor", "link" : "scodec\/bits\/ByteVector.html#nor(other:Repr):Repr", "kind" : "def"}, {"label" : "nand", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.BitwiseOperations.nand", "link" : "scodec\/bits\/ByteVector.html#nand(other:Repr):Repr", "kind" : "def"}, {"label" : "iff", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.BitwiseOperations.iff", "link" : "scodec\/bits\/ByteVector.html#iff(other:Repr):Repr", "kind" : "def"}, {"label" : "implies", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.BitwiseOperations.implies", "link" : "scodec\/bits\/ByteVector.html#implies(other:Repr):Repr", "kind" : "def"}, {"label" : "^", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.BitwiseOperations.^", "link" : "scodec\/bits\/ByteVector.html#^(other:Repr):Repr", "kind" : "final def"}, {"label" : "|", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.BitwiseOperations.|", "link" : "scodec\/bits\/ByteVector.html#|(other:Repr):Repr", "kind" : "final def"}, {"label" : "&", "tail" : "(other: ByteVector): ByteVector", "member" : "scodec.bits.BitwiseOperations.&", "link" : "scodec\/bits\/ByteVector.html#&(other:Repr):Repr", "kind" : "final def"}, {"label" : "unary_~", "tail" : "(): ByteVector", "member" : "scodec.bits.BitwiseOperations.unary_~", "link" : "scodec\/bits\/ByteVector.html#unary_~():Repr", "kind" : "final def"}, {"label" : ">>>", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.BitwiseOperations.>>>", "link" : "scodec\/bits\/ByteVector.html#>>>(n:Idx):Repr", "kind" : "final def"}, {"label" : ">>", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.BitwiseOperations.>>", "link" : "scodec\/bits\/ByteVector.html#>>(n:Idx):Repr", "kind" : "final def"}, {"label" : "<<", "tail" : "(n: Long): ByteVector", "member" : "scodec.bits.BitwiseOperations.<<", "link" : "scodec\/bits\/ByteVector.html#<<(n:Idx):Repr", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/ByteVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/ByteVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/ByteVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/ByteVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/ByteVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/ByteVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/ByteVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/ByteVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/ByteVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/ByteVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/ByteVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/ByteVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/ByteVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getImpl", "tail" : "(index: Long): Byte", "member" : "scodec.bits.ByteVector.getImpl", "link" : "scodec\/bits\/ByteVector.html#getImpl(index:Long):Byte", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Long", "member" : "scodec.bits.ByteVector.size", "link" : "scodec\/bits\/ByteVector.html#size:Long", "kind" : "abstract def"}], "members_object" : [{"label" : "unapplySeq", "tail" : "(b: ByteVector): Some[Seq[Byte]]", "member" : "scodec.bits.ByteVector.unapplySeq", "link" : "scodec\/bits\/ByteVector$.html#unapplySeq(b:scodec.bits.ByteVector):Some[Seq[Byte]]", "kind" : "def"}, {"label" : "concat", "tail" : "(bvs: GenTraversableOnce[ByteVector]): ByteVector", "member" : "scodec.bits.ByteVector.concat", "link" : "scodec\/bits\/ByteVector$.html#concat(bvs:scala.collection.GenTraversableOnce[scodec.bits.ByteVector]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "encodeAscii", "tail" : "(str: String): Either[CharacterCodingException, ByteVector]", "member" : "scodec.bits.ByteVector.encodeAscii", "link" : "scodec\/bits\/ByteVector$.html#encodeAscii(str:String):Either[java.nio.charset.CharacterCodingException,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "encodeUtf8", "tail" : "(str: String): Either[CharacterCodingException, ByteVector]", "member" : "scodec.bits.ByteVector.encodeUtf8", "link" : "scodec\/bits\/ByteVector$.html#encodeUtf8(str:String):Either[java.nio.charset.CharacterCodingException,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "encodeString", "tail" : "(str: String)(charset: Charset): Either[CharacterCodingException, ByteVector]", "member" : "scodec.bits.ByteVector.encodeString", "link" : "scodec\/bits\/ByteVector$.html#encodeString(str:String)(implicitcharset:java.nio.charset.Charset):Either[java.nio.charset.CharacterCodingException,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "fromValidBase64", "tail" : "(str: String, alphabet: Base64Alphabet): ByteVector", "member" : "scodec.bits.ByteVector.fromValidBase64", "link" : "scodec\/bits\/ByteVector$.html#fromValidBase64(str:String,alphabet:scodec.bits.Bases.Base64Alphabet):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fromBase64", "tail" : "(str: String, alphabet: Base64Alphabet): Option[ByteVector]", "member" : "scodec.bits.ByteVector.fromBase64", "link" : "scodec\/bits\/ByteVector$.html#fromBase64(str:String,alphabet:scodec.bits.Bases.Base64Alphabet):Option[scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "fromBase64Descriptive", "tail" : "(str: String, alphabet: Base64Alphabet): Either[String, ByteVector]", "member" : "scodec.bits.ByteVector.fromBase64Descriptive", "link" : "scodec\/bits\/ByteVector$.html#fromBase64Descriptive(str:String,alphabet:scodec.bits.Bases.Base64Alphabet):Either[String,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "fromValidBin", "tail" : "(str: String, alphabet: BinaryAlphabet): ByteVector", "member" : "scodec.bits.ByteVector.fromValidBin", "link" : "scodec\/bits\/ByteVector$.html#fromValidBin(str:String,alphabet:scodec.bits.Bases.BinaryAlphabet):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fromBin", "tail" : "(str: String, alphabet: BinaryAlphabet): Option[ByteVector]", "member" : "scodec.bits.ByteVector.fromBin", "link" : "scodec\/bits\/ByteVector$.html#fromBin(str:String,alphabet:scodec.bits.Bases.BinaryAlphabet):Option[scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "fromBinDescriptive", "tail" : "(str: String, alphabet: BinaryAlphabet): Either[String, ByteVector]", "member" : "scodec.bits.ByteVector.fromBinDescriptive", "link" : "scodec\/bits\/ByteVector$.html#fromBinDescriptive(str:String,alphabet:scodec.bits.Bases.BinaryAlphabet):Either[String,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "fromValidHex", "tail" : "(str: String, alphabet: HexAlphabet): ByteVector", "member" : "scodec.bits.ByteVector.fromValidHex", "link" : "scodec\/bits\/ByteVector$.html#fromValidHex(str:String,alphabet:scodec.bits.Bases.HexAlphabet):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fromHex", "tail" : "(str: String, alphabet: HexAlphabet): Option[ByteVector]", "member" : "scodec.bits.ByteVector.fromHex", "link" : "scodec\/bits\/ByteVector$.html#fromHex(str:String,alphabet:scodec.bits.Bases.HexAlphabet):Option[scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "fromHexDescriptive", "tail" : "(str: String, alphabet: HexAlphabet): Either[String, ByteVector]", "member" : "scodec.bits.ByteVector.fromHexDescriptive", "link" : "scodec\/bits\/ByteVector$.html#fromHexDescriptive(str:String,alphabet:scodec.bits.Bases.HexAlphabet):Either[String,scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "fromUUID", "tail" : "(u: UUID): ByteVector", "member" : "scodec.bits.ByteVector.fromUUID", "link" : "scodec\/bits\/ByteVector$.html#fromUUID(u:java.util.UUID):scodec.bits.ByteVector", "kind" : "final def"}, {"label" : "fromLong", "tail" : "(l: Long, size: Int, ordering: ByteOrdering): ByteVector", "member" : "scodec.bits.ByteVector.fromLong", "link" : "scodec\/bits\/ByteVector$.html#fromLong(l:Long,size:Int,ordering:scodec.bits.ByteOrdering):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fromInt", "tail" : "(i: Int, size: Int, ordering: ByteOrdering): ByteVector", "member" : "scodec.bits.ByteVector.fromInt", "link" : "scodec\/bits\/ByteVector$.html#fromInt(i:Int,size:Int,ordering:scodec.bits.ByteOrdering):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fromShort", "tail" : "(s: Short, size: Int, ordering: ByteOrdering): ByteVector", "member" : "scodec.bits.ByteVector.fromShort", "link" : "scodec\/bits\/ByteVector$.html#fromShort(s:Short,size:Int,ordering:scodec.bits.ByteOrdering):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fromByte", "tail" : "(b: Byte): ByteVector", "member" : "scodec.bits.ByteVector.fromByte", "link" : "scodec\/bits\/ByteVector$.html#fromByte(b:Byte):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "high", "tail" : "(size: Long): ByteVector", "member" : "scodec.bits.ByteVector.high", "link" : "scodec\/bits\/ByteVector$.html#high(size:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "low", "tail" : "(size: Long): ByteVector", "member" : "scodec.bits.ByteVector.low", "link" : "scodec\/bits\/ByteVector$.html#low(size:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "fill", "tail" : "(size: Long)(b: A)(arg0: Integral[A]): ByteVector", "member" : "scodec.bits.ByteVector.fill", "link" : "scodec\/bits\/ByteVector$.html#fill[A](size:Long)(b:A)(implicitevidence$2:Integral[A]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "viewI", "tail" : "(at: (Long) ⇒ Int, size: Long): ByteVector", "member" : "scodec.bits.ByteVector.viewI", "link" : "scodec\/bits\/ByteVector$.html#viewI(at:Long=>Int,size:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "viewAt", "tail" : "(at: (Long) ⇒ Byte, size: Long): ByteVector", "member" : "scodec.bits.ByteVector.viewAt", "link" : "scodec\/bits\/ByteVector$.html#viewAt(at:Long=>Byte,size:Long):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "view", "tail" : "(bytes: ByteBuffer): ByteVector", "member" : "scodec.bits.ByteVector.view", "link" : "scodec\/bits\/ByteVector$.html#view(bytes:java.nio.ByteBuffer):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "view", "tail" : "(bytes: Array[Byte], offset: Int, size: Int): ByteVector", "member" : "scodec.bits.ByteVector.view", "link" : "scodec\/bits\/ByteVector$.html#view(bytes:Array[Byte],offset:Int,size:Int):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "view", "tail" : "(bytes: Array[Byte]): ByteVector", "member" : "scodec.bits.ByteVector.view", "link" : "scodec\/bits\/ByteVector$.html#view(bytes:Array[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bs: GenTraversableOnce[Byte]): ByteVector", "member" : "scodec.bits.ByteVector.apply", "link" : "scodec\/bits\/ByteVector$.html#apply(bs:scala.collection.GenTraversableOnce[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(buffer: ByteBuffer): ByteVector", "member" : "scodec.bits.ByteVector.apply", "link" : "scodec\/bits\/ByteVector$.html#apply(buffer:java.nio.ByteBuffer):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: Array[Byte], offset: Int, length: Int): ByteVector", "member" : "scodec.bits.ByteVector.apply", "link" : "scodec\/bits\/ByteVector$.html#apply(bytes:Array[Byte],offset:Int,length:Int):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: Array[Byte]): ByteVector", "member" : "scodec.bits.ByteVector.apply", "link" : "scodec\/bits\/ByteVector$.html#apply(bytes:Array[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: Vector[Byte]): ByteVector", "member" : "scodec.bits.ByteVector.apply", "link" : "scodec\/bits\/ByteVector$.html#apply(bytes:Vector[Byte]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: A*)(arg0: Integral[A]): ByteVector", "member" : "scodec.bits.ByteVector.apply", "link" : "scodec\/bits\/ByteVector$.html#apply[A](bytes:A*)(implicitevidence$1:Integral[A]):scodec.bits.ByteVector", "kind" : "def"}, {"label" : "empty", "tail" : ": ByteVector", "member" : "scodec.bits.ByteVector.empty", "link" : "scodec\/bits\/ByteVector$.html#empty:scodec.bits.ByteVector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/ByteVector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/ByteVector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/ByteVector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/ByteVector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/ByteVector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/ByteVector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/ByteVector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteVector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteVector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/ByteVector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/ByteVector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/ByteVector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/ByteVector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/ByteVector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/ByteVector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/ByteVector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/ByteVector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/ByteVector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/ByteVector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scodec\/bits\/ByteVector.html", "kind" : "class"}, {"name" : "scodec.bits.crc", "shortDescription" : "Provides support for calculating cyclic redundancy checks.", "object" : "scodec\/bits\/crc$.html", "members_object" : [{"label" : "bitwise", "tail" : "(poly: BitVector, initial: BitVector, reflectInput: Boolean, reflectOutput: Boolean, finalXor: BitVector, value: BitVector): BitVector", "member" : "scodec.bits.crc.bitwise", "link" : "scodec\/bits\/crc$.html#bitwise(poly:scodec.bits.BitVector,initial:scodec.bits.BitVector,reflectInput:Boolean,reflectOutput:Boolean,finalXor:scodec.bits.BitVector,value:scodec.bits.BitVector):scodec.bits.BitVector", "kind" : "def"}, {"label" : "int32", "tail" : "(poly: Int, initial: Int, reflectInput: Boolean, reflectOutput: Boolean, finalXor: Int): (BitVector) ⇒ Int", "member" : "scodec.bits.crc.int32", "link" : "scodec\/bits\/crc$.html#int32(poly:Int,initial:Int,reflectInput:Boolean,reflectOutput:Boolean,finalXor:Int):scodec.bits.BitVector=>Int", "kind" : "def"}, {"label" : "apply", "tail" : "(poly: BitVector, initial: BitVector, reflectInput: Boolean, reflectOutput: Boolean, finalXor: BitVector): (BitVector) ⇒ BitVector", "member" : "scodec.bits.crc.apply", "link" : "scodec\/bits\/crc$.html#apply(poly:scodec.bits.BitVector,initial:scodec.bits.BitVector,reflectInput:Boolean,reflectOutput:Boolean,finalXor:scodec.bits.BitVector):scodec.bits.BitVector=>scodec.bits.BitVector", "kind" : "def"}, {"label" : "crc32c", "tail" : ": (BitVector) ⇒ BitVector", "member" : "scodec.bits.crc.crc32c", "link" : "scodec\/bits\/crc$.html#crc32c:scodec.bits.BitVector=>scodec.bits.BitVector", "kind" : "lazy val"}, {"label" : "crc32", "tail" : ": (BitVector) ⇒ BitVector", "member" : "scodec.bits.crc.crc32", "link" : "scodec\/bits\/crc$.html#crc32:scodec.bits.BitVector=>scodec.bits.BitVector", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/crc$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/crc$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/crc$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/crc$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/crc$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/crc$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/crc$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/crc$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/crc$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/crc$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/crc$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/crc$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/crc$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/crc$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/crc$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/crc$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/crc$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/crc$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/crc$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scodec.bits.HexStringSyntax", "shortDescription" : "Provides the hex string interpolator, which returns ByteVector instances from hexadecimal strings.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scodec\/bits\/package$$HexStringSyntax.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scodec\/bits\/package$$HexStringSyntax.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HexStringSyntax) ⇒ Boolean, msg: ⇒ Any): HexStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$HexStringSyntax.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HexStringSyntax) ⇒ Boolean): HexStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$HexStringSyntax.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): HexStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$HexStringSyntax.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): HexStringSyntax", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scodec\/bits\/package$$HexStringSyntax.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (HexStringSyntax, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scodec\/bits\/package$$HexStringSyntax.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (HexStringSyntax, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scodec\/bits\/package$$HexStringSyntax.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "hex", "tail" : "(args: ByteVector*): ByteVector", "member" : "scodec.bits.HexStringSyntax.hex", "link" : "scodec\/bits\/package$$HexStringSyntax.html#hex(args:scodec.bits.ByteVector*):scodec.bits.ByteVector", "kind" : "macro def"}, {"member" : "scodec.bits.HexStringSyntax#<init>", "error" : "unsupported entity"}, {"label" : "sc", "tail" : ": StringContext", "member" : "scodec.bits.HexStringSyntax.sc", "link" : "scodec\/bits\/package$$HexStringSyntax.html#sc:StringContext", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "scodec\/bits\/package$$HexStringSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "scodec\/bits\/package$$HexStringSyntax.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/package$$HexStringSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/package$$HexStringSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "scodec\/bits\/package$$HexStringSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "scodec\/bits\/package$$HexStringSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "scodec\/bits\/package$$HexStringSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "scodec\/bits\/package$$HexStringSyntax.html", "kind" : "class"}, {"name" : "scodec.bits.LiteralSyntaxMacros", "shortDescription" : "Macros that support binary and hexadecimal literals.", "object" : "scodec\/bits\/LiteralSyntaxMacros$.html", "members_object" : [{"label" : "hexStringInterpolator", "tail" : "(c: Context)(args: scala.reflect.macros.whitebox.Context.Expr[ByteVector]*): scala.reflect.macros.whitebox.Context.Expr[ByteVector]", "member" : "scodec.bits.LiteralSyntaxMacros.hexStringInterpolator", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#hexStringInterpolator(c:scodec.bits.LiteralSyntaxMacros.blackbox.Context)(args:c.Expr[scodec.bits.ByteVector]*):c.Expr[scodec.bits.ByteVector]", "kind" : "def"}, {"label" : "binStringInterpolator", "tail" : "(c: Context)(args: scala.reflect.macros.whitebox.Context.Expr[BitVector]*): scala.reflect.macros.whitebox.Context.Expr[BitVector]", "member" : "scodec.bits.LiteralSyntaxMacros.binStringInterpolator", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#binStringInterpolator(c:scodec.bits.LiteralSyntaxMacros.blackbox.Context)(args:c.Expr[scodec.bits.BitVector]*):c.Expr[scodec.bits.BitVector]", "kind" : "def"}, {"label" : "blackbox", "tail" : "", "member" : "scodec.bits.LiteralSyntaxMacros.blackbox", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#blackbox", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scodec\/bits\/LiteralSyntaxMacros$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};